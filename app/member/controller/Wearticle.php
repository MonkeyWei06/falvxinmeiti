<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 自媒体广告发布
 * Date: 2018/10/20
 * Time: 10:19
 */
namespace app\member\controller;
use think\Db;
use think\Session;
use think\Config;
use think\Request;
use think\Log;
use think\Loader;
use app\common\controller\simple_html_dom;
class Wearticle extends Common {
	public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
		parent::checktype();
    }
	public function deal_past() {
		$list=db('agencyorder')->select();
		foreach ($list as $key => $value) {
			$ArticleInfo=db('wemedia')->where('MediaID',$value['media_id'])->find();
			Db::name('agencyorder')->where('agencyorder_id',$value['agencyorder_id'])->update(['media_money'=>$ArticleInfo['MediaWebPrice']]);
		}
	}
	/**
     * 自媒体广告发布首页
     */
	public function index() {
		session('MenuCookie','2');
		Session::set('filename','');
		$editorValue = input('editorValue');
		$beizhu =   input('beizhu');
		$title =  input('title');
		$State = input('State');
		$article_customer =   input('article_customer');
		$starttime =   input('starttime');
		$ID = input('ID');
		$temp = input('temp');
		if(!empty($State) && $State=='Yes') {
			//再次发布
			$ArticleInfo=db('wearticle')->where('article_id',$ID)->where('member_id',$this->MemberID)->find();
			$OrderInfo=db('agencyorder')->where('article_id',$ID)->where('media_type','2')->find();
			$title = $ArticleInfo['article_title'];
			$beizhu = $ArticleInfo['article_remarks'];
			$article_customer = $ArticleInfo['article_customer'];
			if(!empty($OrderInfo['starttime'])) {
				$starttime = date("Y-m-d",$OrderInfo['starttime']);
			} else {
				$starttime ='';
			}
			$editorValue = $ArticleInfo['article_content'];
			Session::set('filename',$ArticleInfo['article_doc']);
			$FileName=$ArticleInfo['article_doc'];
		}
		if($temp){
			$ArticleInfo=db('article_temp')->where('TempArticleID',$temp)->where('member_id',$this->MemberID)->find();
			$title = $ArticleInfo['article_title'];
			$beizhu = $ArticleInfo['article_remarks'];
			$editorValue = $ArticleInfo['article_content'];
			Session::set('filename',$ArticleInfo['article_doc']);
			$FileName=$ArticleInfo['article_doc'];
		}
        $this->assign('temp',$temp);
		$this->assign('editorValue',$editorValue);
		$this->assign('beizhu',$beizhu);
		$this->assign('title',$title);
		$this->assign('article_customer',$article_customer);
		$this->assign('starttime',$starttime);
		$this->assign('MemberBalanceCount',$this->MemberInfo['MemberBalanceCount']);
		$MainConfig=db('config')->where('ID','1')->find();
		$this->assign('MainConfig',$MainConfig);
		return $this->fetch();
	}
	/**
     * 广告发布媒体选择页
     */
	public function wemedia() {
		$TempArticleID = input('TempArticleID','','trim');
		$title = input('title');
		$beizhu = input('beizhu');
		$article_customer =   input('article_customer');
		$starttime=strtotime(input('starttime'));
		$editorValue = input('editorValue');
		$State = input('State');
		$ID = input('ID');
		if(!input('title')) $this->error('文章标题不能为空');
		if(!empty($starttime) && intval($starttime)>0) {
			if(!$starttime) $this->error('请选择推送时间');
			$endtime=strtotime(date("Y-m-d 00:00",time()));
			//当前时间
			if($starttime <= $endtime) $this->error('推送时间不能小于等于当前时间');
		}
		if(!empty($State) && $State=='Yes') {
			//再次发布
			$ArticleInfo=db('article')->where('article_id',$ID)->where('member_id',$this->MemberID)->find();
			$title = $ArticleInfo['article_title'];
			$beizhu = $ArticleInfo['article_remarks'];
			$article_customer = $ArticleInfo['article_customer'];
			$editorValue = $ArticleInfo['article_content'];
			Session::set('filename',$ArticleInfo['article_doc']);
			$FileName=$ArticleInfo['article_doc'];
		} else {
			$FileName=Session::get('filename');
			//if(empty($FileName)) $this->error('请上传稿件');
			$FileName='';
		}
		$Info=db('article_temp')->where('TempArticleID',$TempArticleID)->where('member_id',$this->MemberID)->find();
		if(empty($Info)) {
			$Data=array();
			$Data['TempArticleID']=$TempArticleID;
			$Data['member_id']=$this->MemberID;
			$Data['article_title']=$title;
			$Data['article_content']=$editorValue;
			$Data['article_remarks']=$beizhu;
			$Data['article_customer']=$article_customer;
			$Data['article_doc']=$FileName;
			$Data['article_time']=time();
			db('article_temp')->data($Data)->insert();
			//dump($Data);exit;
		} else {
			$title = $Info['article_title'];
			$beizhu = $Info['article_remarks'];
			$article_customer = $Info['article_customer'];
			$editorValue = $Info['article_content'];
			Session::set('filename',$Info['article_doc']);
		}
		$List= Db::name('newsdynamics')
		            ->where('NewsState',1)
					->where('NewsTypeID',2)
		            ->order('NewsSort desc,NewsID Desc')
		            ->limit(6)
					->select();
		$this->assign('list',$List);
		$this->assign('title',$title);
		$this->assign('beizhu',$beizhu);
		$this->assign('article_customer',$article_customer);
		$this->assign('starttime',$starttime);
		$this->assign('editorValue',$editorValue);
		$this->assign('TempArticleID',$TempArticleID);
		$this->assign('MediaWebNameID',GetCurrentWholeType(157));
		//	平台
		$this->assign('MediaIndustryID',GetCurrentWholeType(160));
		//行业类型
		$this->assign('MediaCityID',GetCityTypeList('0'));
		//覆盖区域
		$this->assign('fennumid',FanNum());
		//粉丝数
		$this->assign('MediaRedID',ReadNum());
		//阅读数
		$this->assign('pricenum',PriceNum());
		//价格
		$this->assign('auth',AuthNum());
		//账号认证
		$this->assign('can_video',Can_video());
		//能否发视频
		$this->assign('weekend_publish',Weekend_publish());
		//周末可发
		$this->assign('Money',$this->MemberInfo['MemberBalanceCount']);
		return $this->fetch();
	}
	/**
     * 上传文档
     */
	public function upload() {
		date_default_timezone_set("Asia/Shanghai");
		$FilePathInfo=$this->OneUpload('file');
		if(!empty($FilePathInfo)) {
			//dump($FilePathInfo);
			$Info=$this->WordUpLoad($FilePathInfo);
			if(empty($Info)) return json(2);
			return json($Info);
		}
		return json(1);
	}
	/**
     * word中的图片解析
     */
	public function base64_image_content($base64_image_content,$path) {
		//匹配出图片的格式
		if (preg_match('/^(data:\s*image\/(\w+);base64,)/', $base64_image_content, $result)) {
			$type = $result[2];
			$new_file = date('Ymd',time())."/";
			if(!file_exists($path.$new_file)) {
				//echo $path.$new_file;
				//检查是否有该文件夹，如果没有就创建，并给予最高权限
				mkdir($path.$new_file, 0777);
			}
			list($msec, $sec) = explode(' ', microtime());
			$msectime = (float)sprintf('%.0f', (floatval($msec) + floatval($sec)) * 1000);
			//echo  $base64_image_content;
			$new_file = $new_file.$msectime.rand(0,1000).".{$type}";
			$base64_string= explode(',', $base64_image_content);
			//截取data:image/png;base64, 这个逗号后的字符
			$base64_image_content= ($base64_string[1]);
			Log::record($new_file,'error');
			if (file_put_contents($path.$new_file, base64_decode(str_replace($result[1], '', $base64_image_content)))) {
				return '/'.$new_file;
			} else {
				echo -1;
				return false;
			}
		} else {
			//echo 0;
			return false;
		}
	}
	/**
     * word上传
     */
	public function WordUpLoad($file) {
		Session::set('filename',$file);
		header('Content-Type:text/html; charset=utf-8');
		$file = PUBLIC_PATH.'uploads/word/'.$file;
		if(empty($file)) return false;
		//exec("/usr/bin/unoconv -f html   ".$file);
		$GetExtension=pathinfo($file,PATHINFO_EXTENSION );
		$html_file= pathinfo($file,PATHINFO_DIRNAME).'/'.pathinfo($file,PATHINFO_FILENAME).'.html';
		exec("/usr/bin/sudo /usr/bin/unoconv -f html " .$file." && chown www.www {$html_file}");
		$myfile = fopen($html_file, "r") or die("Unable to open file!");
		Vendor('simplehtml/simple_html_dom');
		$html_dom = new simple_html_dom($html_file);
		$filter_tags=['p','font','span','a','img'];
		foreach ($filter_tags as $f => $tag) {
			foreach($html_dom->find($tag) as $e) {
				foreach ($e->getAllAttributes () as $key => $value) {
					if($key!='src') $e->removeAttribute ($key);
				}
				if($tag=='img') $e->setAttribute ('width', 500 ); else {
					$e_tmp=$e;
					/*while($e_tmp->parent){
                        if(sizeof($e->parent->children)==1)
                            $e_tmp=$e_tmp->parent;
                        }*/
					if(trim($e->innertext)=='') $e->outertext = '';
				}
			}
		}
		$p = $html_dom->find('body', 0)->find('*', 0);
		$p->setAttribute('style', 'text-align:center');
		$head=$html_dom->find('head');
		$head[0]->outertext = '';
		foreach($html_dom->find('img') as $e) {
			$new_src=$this->base64_image_content($e->src,ROOT_PATH.'public'.DIRECTORY_SEPARATOR.'uploads'. DIRECTORY_SEPARATOR.'word'. DIRECTORY_SEPARATOR.'img'. DIRECTORY_SEPARATOR);
			if(!$new_src) continue;
			$e->setAttribute('src',$this->articleDomain.'uploads/word'.$new_src);
			//$e->setAttribute('src', '/uploads/word/img'.$new_src);
			$e->parent->setAttribute('style', 'text-align:center');
		}
		$html= $html_dom;
		$html=str_replace('<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">','',$html);
		$pathimg=$this->articleDomain."uploads/word/".date("Ymd",time()).'/';
		$pregRule = "/<[img|IMG].*?src=[\'|\"](.*?(?:[\.jpg|\.jpeg|\.png|\.gif|\.bmp]))[\'|\"].*?[\/]?>/";
		$html = preg_replace($pregRule, '<img src="'.$pathimg.'${1}" style="max-width:100%">', $html);
		$html = preg_replace('|<h[\d]{1}[^>]+>(.*?)</h[\d]{1}>|i', '<p style="text-align: center;">$1</p>', $html);
		return [
				'title'=>strip_tags($p->innertext),
				'html'=>html_entity_decode($html)
		       ];
	}
	/**
     * 提交订单
     */
	public function sborder() {
		if(!input('title')) return '文章标题不能为空';
		$TempArticleID =       input('TempArticleID');
		$TempArticleInfo=db('article_temp')->where('TempArticleID',$TempArticleID)->where('member_id',$this->MemberID)->find();
		$editorValue = $TempArticleInfo['article_content'];
		$beizhu =      $TempArticleInfo['article_remarks'];
		$article_customer = $TempArticleInfo['article_customer'];
		$title =       $TempArticleInfo['article_title'];
		$article_doc =       $TempArticleInfo['article_doc'];
		$starttime =      input('starttime');
		
		$idArr = explode(',',input('str'));
		$list = Db::name('wemedia')->where('MediaID','in',$idArr)->where('MediaState',1)->select();
		if(!$list) return '请选择媒体';
		$fuji = Db::name('member')->where('MemberID',$this->MemberInfo['MemberRecommendID'])->find();
		$yeji = '';
		if($fuji) $yeji = Db::name('member')->where('MemberID',$fuji['MemberRecommendID'])->find();
		$AMoney = 0;
		$AMoney2 = 0;
		$AMoney3 = 0;
		foreach ($list as $key=>$val) {
			$AMoney+= controller('common/Common')->weprice($this->MemberInfo['MemberID'],$val['MediaID']);
			if($fuji)$AMoney2+= controller('common/Common')->weprice($fuji['MemberID'],$val['MediaID']);
			//父级的费用；二级；
			if($yeji)$AMoney3+= controller('common/Common')->weprice($yeji['MemberID'],$val['MediaID']);
			//爷级的费用；一级；
		}
		if($this->MemberInfo['MemberBalanceCount'] < $AMoney) return '余额不足';
		if(!empty($fuji['MemberAgentBalanceCount']) && $fuji['MemberAgentBalanceCount'] < $AMoney2) return '平台余额不足，请联系客服！';
		if(!empty($yeji['MemberAgentBalanceCount']) && $yeji['MemberAgentBalanceCount'] < $AMoney3) return '平台余额不足，请联系客服！';
		//推送状态
		$push_state = Db::name('member')
		            ->alias('M')
		            ->where('MemberID',$this->MemberInfo['MemberRecommendID'])
		            ->value('MemberTypeID');
		//MemberTypeID 会员类型，1 普通，2 二级，3 一级
		if(!$push_state) $push_state = 0;
		$data = [];
		$data['agency_member_id'] = $this->AgencySiteInfo['MemberID'];
		$data['member_id'] = $this->MemberID;
		$data['article_num'] = 'mt'.$this->ordernum();
		$data['article_title'] = $title;
		$data['article_content'] = $editorValue;
		$data['article_remarks'] = $beizhu;
		$data['article_customer'] = $article_customer;
		$data['article_time'] = time();
		$data['article_doc'] = $article_doc;
		$wzid = Db::name('wearticle')->insertGetId($data);
		db('article_temp')->where('TempArticleID','')->delete();
		//删除空记录
		db('article_temp')->where('TempArticleID',$TempArticleID)->where('member_id',$this->MemberID)->delete();
		//删除临时ID记录
		$statacheck=0;
		//Db::startTrans();		
		//try {
			foreach ($list as $key=>$val) {
				//生成一个订单
				if($val['UserType']==4){
					$unionstr='MTDK';
				}else{
					$unionstr='mtdd';
				}
				$ordernum = $unionstr.$this->ordernum();
				//$ordernum = 'mtdd'.$this->ordernum();
				$Money = controller('common/Common')->weprice($this->MemberInfo['MemberID'],$val['MediaID']);
				$data = [];
				$data['order_number']  = $ordernum;
				$data['media_id']  = $val['MediaID'];
				$data['media_name']  = $val['MediaTitle'];
				$data['media_money']  = $val['MediaWebPrice'];
				$data['article_id']  =$wzid;
				$data['push_state']  = $push_state;
				$data['order_time']  = time();
				//$data['member_id']  = $val['MediaMemberID'];
				if(empty($starttime) && intval($starttime)<=0){
					$data['order_state'] = '0';
					$data['member_id']  = $val['MediaMemberID'];
				}else{
					$data['ycmemberid']  =$val['MediaMemberID'];
					$data['member_id']  = '0';
					$data['order_state'] = '5';
				}
				$data['media_type'] = '2';
				$data['need_update'] = '0';
				$data['starttime'] = $starttime;
				$data['order_money']  = $Money;
				$data['RegDomain']  =$this->AgencySiteInfo['Domain'];
				$orderid = Db::name('agencyorder')->insertGetId($data);
				//临时关闭 2019/4/20 星期六
					if(empty($starttime) && intval($starttime)<=0){
						if($val['UserType']==3){
							$this->error('请联系qq：1227187938 开通发送接口');
							exit;
						}elseif($val['UserType']==4){
							$this->error('请联系qq：1227187938 开通发送接口');
							exit;
						}
					}
				//减少会员的费用
				$returndata=Db::name('member')->where('MemberID',$this->MemberID)->setDec('MemberBalanceCount',$Money);
				if($orderid && $returndata){
					$statacheck=1;
				}
				$userinfo=Db::name('member')
					->alias('M')
					->field('M.MemberMobile,U.RState')
					->join('memberset U', 'U.member_id=M.MemberID', 'left')
					->where('M.MemberID',$val['MediaMemberID'])
					->find();
				if($userinfo && $userinfo['RState']==1){
					Send_Sms($userinfo['MemberMobile'],''.$userinfo['MemberMobile'].',您有新的订单请注意查收');
				}

				//插入一条日志
				$xj = Db::name('member')->where('MemberID',$this->MemberID)->value('MemberBalanceCount');
				$data = [];
				$data['BalanceMemberID'] = $this->MemberID;
				$data['BalanceNumber'] = $ordernum;
				$data['BalanceType'] = 2;
				$data['BalanceCount'] = $Money;
				$data['BalanceCurrentCount'] = $xj;
				$data['BalanceTime'] = time();
				$data['BalanceGroup'] = '4';
				$data['BalanceState'] = '1';
				$data['BalanceTitle'] = '自媒体发布';
				Db::name('balance')->insert($data);
				//二级代理
				if(!empty($fuji) && empty($yeji)) {
					$Money = controller('common/Common')->weprice($fuji['MemberID'],$val['MediaID']);
					Db::name('member')->where('MemberID',$fuji['MemberID'])->setDec('MemberAgentBalanceCount',$Money);
					//插入一条日志
					$xj = Db::name('member')->where('MemberID',$fuji['MemberID'])->value('MemberAgentBalanceCount');
					$data = [];
					$data['BalanceMemberID'] = $fuji['MemberID'];
					$data['BalanceNumber'] = $ordernum;
					$data['BalanceType'] = 2;
					$data['BalanceCount'] = $Money;
					$data['BalanceCurrentCount'] = $xj;
					$data['BalanceTime'] = time();
					$data['BalanceGroup'] = '4';
					$data['BalanceState'] = '1';
					$data['BalanceTitle'] = '自媒体发布';
					Db::name('balance')->insert($data);
					$data = [];
					$data['order_money1'] = $Money;
					$data['agency_id1'] = $fuji['MemberID'];
					Db::name('agencyorder')->where('agencyorder_id',$orderid)->update($data);
				} else if(!empty($fuji) && !empty($yeji)) {
					$Money = controller('common/Common')->weprice($fuji['MemberID'],$val['MediaID']);
					Db::name('member')->where('MemberID',$fuji['MemberID'])->setDec('MemberAgentBalanceCount',$Money);
					$xj = Db::name('member')->where('MemberID',$fuji['MemberID'])->value('MemberAgentBalanceCount');
					$data = [];
					$data['BalanceMemberID'] = $fuji['MemberID'];
					$data['BalanceNumber'] = $ordernum;
					$data['BalanceType'] = 2;
					$data['BalanceCount'] = $Money;
					$data['BalanceCurrentCount'] = $xj;
					$data['BalanceTime'] = time();
					$data['BalanceGroup'] = '4';
					$data['BalanceState'] = '1';
					$data['BalanceTitle'] = '自媒体发布';
					Db::name('balance')->insert($data);
					$data = [];
					$data['order_money2'] = $Money;
					$data['agency_id'] = $fuji['MemberID'];
					Db::name('agencyorder')->where('agencyorder_id',$orderid)->update($data);
					$Money = controller('common/Common')->weprice($yeji['MemberID'],$val['MediaID']);
					Db::name('member')->where('MemberID',$yeji['MemberID'])->setDec('MemberAgentBalanceCount',$Money);
					$xj = Db::name('member')->where('MemberID',$yeji['MemberID'])->value('MemberAgentBalanceCount');
					$data = [];
					$data['BalanceMemberID'] = $yeji['MemberID'];
					$data['BalanceNumber'] = $ordernum;
					$data['BalanceType'] = 2;
					$data['BalanceCount'] = $Money;
					$data['BalanceCurrentCount'] = $xj;
					$data['BalanceTime'] = time();
					$data['BalanceTitle'] = '自媒体发布';
					$data['BalanceGroup'] = '4';
					$data['BalanceState'] = '1';
					Db::name('balance')->insert($data);
					$data = [];
					$data['order_money1'] = $Money;
					$data['agency_id1'] = $yeji['MemberID'];
					Db::name('agencyorder')->where('agencyorder_id',$orderid)->update($data);
				}
			}
			return $statacheck;
			/*
			if($statacheck==1) {
					Db::commit();
					return $statacheck;
				}else{
					throw new \Exception(0);
				}
			} catch (\Exception $e) {
			   // 回滚事务
			    Db::rollback();
				$statacheck=0;
				return $statacheck;
			}*/
	}
	public function ordernum() {
		$date = date('Ymd');
		$str = substr(implode(null, array_map('ord', str_split(substr(uniqid(), 7, 13), 1))), 0, 8);
		$rand = rand(10, 100);
		return $date . $str . $rand;
	}
	//取消稿件
	public function cancel() {
		$ID=input('ID','','abs');
		//TODO
		$order=db('agencyorder')->where('agencyorder_id',$ID)->find();
        $order_state=$order['order_state'];
		if($order_state!=0){
			 $this->error('已收稿订单无法取消');
			 exit;
		}else{
			$order_state=4;
		}
		$mediatype = Db::name('wemedia')->where('MediaID',$order['media_id'])->find();

		if($mediatype['UserType']!=2){
			$this->error('请联系qq：1227187938 开通发送接口');
			exit;
		}
		$fabu_site = '';
		$fabu_content = '';
		$Contrller=controller('common/Common');
		$Contrller->WeRefund($ID,$order_state,$fabu_site,$fabu_content);
		$this->success('操作成功！');
	}
	 /**
     * 预览
     */
    public function welook()
    {
        $id = input('id');
        if($id)
        {
            $Info = db('agencyorder')
                ->alias('A')
                ->where('AR.member_id|A.agency_id|A.agency_id1',$this->MemberID)
                ->where('AR.article_id',$id)
                ->join('wearticle AR','A.article_id = AR.article_id')
                ->find();			
            $this->assign('title',$Info['article_title']);
            $this->assign('html',$Info['article_content']);
        }else{
            $this->assign('title',input('opentitle'));
            $this->assign('html',input('opencontent'));
        }
        return view();
    }
	public function ajax_vido()
	{
	//视频上传
	// 控制浏览器缓存，每次访问不缓存数据
		header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
        header("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT");
        header("Content-type: text/html; charset=gbk32");
        header("Cache-Control: no-store, no-cache, must-revalidate");
        header("Cache-Control: post-check=0, pre-check=0", false);
        header("Pragma: no-cache");
        $folder = input('folder');
		if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
            exit; // finish preflight CORS requests here
        }
        if ( !empty($_REQUEST[ 'debug' ]) ) {
            $random = rand(0, intval($_REQUEST[ 'debug' ]) );
            if ( $random === 0 ) {
                header("HTTP/1.0 500 Internal Server Error");
                exit;
            }
        }
        // header("HTTP/1.0 500 Internal Server Error");
        // exit;
        // 5 minutes execution time
        set_time_limit(5 * 60);
        // Uncomment this one to fake upload time
         usleep(5000);
        // Settings
        $targetDir = PUBLIC_PATH.'uploads/file_material_tmp';            //存放分片临时目录
        if($folder){
            $uploadDir = PUBLIC_PATH.'uploads/file_material/'.$folder.'/'.date('Ymd');
        }else{
            $uploadDir = PUBLIC_PATH.'uploads/file_material'.'/'.date('Ymd');    //分片合并存放目录
        }
 
        $cleanupTargetDir = true; // Remove old files
        $maxFileAge = 5 * 3600; // Temp file age in seconds
 
        // Create target dir
        if (!file_exists($targetDir)) {
            mkdir($targetDir,0777,true);
        }
        // Create target dir
        if (!file_exists($uploadDir)) {
            mkdir($uploadDir,0777,true);
        }
        // Get a file name
        if (isset($_REQUEST["name"])) {
            $fileName = $_REQUEST["name"];
        } elseif (!empty($_FILES)) {
            $fileName = $_FILES["file"]["name"];
        } else {
            $fileName = uniqid("file_");
        }
        $oldName = $fileName;
 
        $fileName = iconv('UTF-8','gb2312',$fileName);
        $filePath = $targetDir . '/' . $fileName;
        // $uploadPath = $uploadDir . DIRECTORY_SEPARATOR . $fileName;
        // Chunking might be enabled
        $chunk = isset($_REQUEST["chunk"]) ? intval($_REQUEST["chunk"]) : 0;
        $chunks = isset($_REQUEST["chunks"]) ? intval($_REQUEST["chunks"]) : 1;
        // Remove old temp files
        if ($cleanupTargetDir) {
            if (!is_dir($targetDir) || !$dir = opendir($targetDir)) {
                die('{"jsonrpc" : "2.0", "error" : {"code": 100, "message": "Failed to open temp directory111."}, "id" : "id"}');
            }
            while (($file = readdir($dir)) !== false) {
                $tmpfilePath = $targetDir . '/' . $file;
                // If temp file is current file proceed to the next
                if ($tmpfilePath == "{$filePath}_{$chunk}.part" || $tmpfilePath == "{$filePath}_{$chunk}.parttmp") {
                    continue;
                }
                // Remove temp file if it is older than the max age and is not the current file
                if (preg_match('/\.(part|parttmp)$/', $file) && (filemtime($tmpfilePath) < time() - $maxFileAge)) {
                    unlink($tmpfilePath);
                }
            }
            closedir($dir);
        }
        // Open temp file
        if (!$out = fopen("{$filePath}_{$chunk}.parttmp", "wb")) {
            die('{"jsonrpc" : "2.0", "error" : {"code": 102, "message": "Failed to open output stream222."}, "id" : "id"}');
        }
        if (!empty($_FILES)) {
            if ($_FILES["file"]["error"] || !is_uploaded_file($_FILES["file"]["tmp_name"])) {
                die('{"jsonrpc" : "2.0", "error" : {"code": 103, "message": "Failed to move uploaded file333."}, "id" : "id"}');
            }
            // Read binary input stream and append it to temp file
            if (!$in = fopen($_FILES["file"]["tmp_name"], "rb")) {
                die('{"jsonrpc" : "2.0", "error" : {"code": 101, "message": "Failed to open input stream444."}, "id" : "id"}');
            }
        } else {
            if (!$in = fopen("php://input", "rb")) {
                die('{"jsonrpc" : "2.0", "error" : {"code": 101, "message": "Failed to open input stream555."}, "id" : "id"}');
            }
        }
        while ($buff = fread($in, 4096)) {
            fwrite($out, $buff);
        }
        fclose($out);
        fclose($in);
        rename("{$filePath}_{$chunk}.parttmp", "{$filePath}_{$chunk}.part");
        $index = 0;
        $done = true;
        for( $index = 0; $index < $chunks; $index++ ) {
            if ( !file_exists("{$filePath}_{$index}.part") ) {
                $done = false;
                break;
            }
        }
 
        if ($done) {
            $pathInfo = pathinfo($fileName);
            $hashStr = substr(md5($pathInfo['basename']),8,16);
            $hashName = time() . $hashStr . '.' .$pathInfo['extension'];
            $uploadPath = $uploadDir . '/' .$hashName;
			//$uploadPathxd = '/' .$hashName;
            if (!$out = fopen($uploadPath, "wb")) {
                die('{"jsonrpc" : "2.0", "error" : {"code": 102, "message": "Failed to open output stream666."}, "id" : "id"}');
            }
            //flock($hander,LOCK_EX)文件锁
            if ( flock($out, LOCK_EX) ) {
                for( $index = 0; $index < $chunks; $index++ ) {
                    if (!$in = fopen("{$filePath}_{$index}.part", "rb")) {
                        break;
                    }
                    while ($buff = fread($in, 4096)) {
                        fwrite($out, $buff);
                    }
                    fclose($in);
                    unlink("{$filePath}_{$index}.part");
                }
                flock($out, LOCK_UN);
            }
            fclose($out);
            $response = [
                'success'=>true,
                'oldName'=>$hashName,
                'filePath'=>'/uploads/file_material/files/'.date('Ymd').'/'.$hashName,
//                'fileSize'=>$data['size'],
                'fileSuffixes'=>$pathInfo['extension'],          //文件后缀名
//                'file_id'=>$data['id'],
            ];
            return json($response);
        }
 
        // Return Success JSON-RPC response
        die('{"jsonrpc" : "2.0", "result" : null, "id" : "id"}');
    }   
}