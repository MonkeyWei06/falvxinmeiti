<?php
/**
 * Created by PhpStorm.
 * User: Memberistrator
 * Date: 2018/1/4
 * Time: 9:49
 */
namespace app\admin\controller;
use \app\admin\model\Member as MemberModel;
use \app\admin\model\Balance as BalanceModel;
use think\Db;
class Agent extends Common
{
    private $PageCount=20;
    private $MenuName='代理商';//栏目名称
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('MenuName',$this->MenuName);
    }
    public function index()
    {
        $UrlParam=input('get.');
        $UrlParam['GroupID']=2;
        $Model=new MemberModel();
        $List=$Model->GetAgentList($UrlParam,$this->PageCount);
        $this->assign('List',$List);
        $this->assign('UrlParam',$UrlParam);
        $this->assign('GetMemberTypeList',$this->GetAgentTypeList(1));
        return $this->fetch();
    }
    public function auditlist()
    {
        $UrlParam=input('get.');
        $UrlParam['GroupID']=2;
        $Model=new MemberModel();
        $List=$Model->GetAgentList2($UrlParam,$this->PageCount);
        $this->assign('List',$List);
        $this->assign('UrlParam',$UrlParam);
        $this->assign('GetMemberTypeList',$this->GetAgentTypeList(1));
        return $this->fetch();
    }
    public function add()
    {
        if($this->request->isPost()){
            $Post=input('post.');
            $this->AddSave($Post);
        }else{
            $this->assign('GetMemberTypeList',$this->GetAgentTypeList(1));
            $this->assign('MemberPriceType',$this->GetCurrentWholeType(115));//	会员价格
            return $this->fetch();
        }
    }
    //保存数据
    private function AddSave($Post)
    {
        $Model=new MemberModel();
        $State=$Model->where('MemberName',$Post['MemberName'])->count();
        if($State!=0) $this->error('您所输入的会员名称已被注册');
        if(empty($Post['MemberPwd']))$this->error('当前会员密码不能为空');
        if($Post['MemberPwd']!=$Post['MemberAffirmPwd']) $this->error('您的两次密码输入不一致');
        unset($Post['MemberAffirmPwd']);
        $MemberOneName=$Post['MemberOneName'];
        unset($Post['MemberOneName']);
        //手机号验证
        //$State=$Model->where('MemberMobile',$Post['MemberMobile'])->count();
        //if($State!=0) $this->error('您所输入的会员手机号已被注册');
//        //邮箱验证
//        $State=$Model->where('MemberEmail',$Post['MemberEmail'])->count();
//        if($State!=0) $this->error('您所输入的会员邮箱已被注册');
		 if(empty($Post['MemberInviteCode']))$this->error('请填写邀请码');
        //域名验证
        $State=$Model->where('Domain',$Post['Domain'])->count();
        if($State!=0) $this->error('此域名已被占用');
		if(!empty($Post['oneDomain'])){
			 $oneState=$Model->where('oneDomain',$Post['oneDomain'])->count();
			  if($oneState!=0) $this->error('此一级域名已被占用');
		}
//        //图片上传
//        $PicPath=$this->OneUpload('MemberPicPath');
//        if(!empty($PicPath)) $Post['MemberPicPath']=$PicPath;
        if(!empty($MemberOneName)){
            $Where=array();
            $Where['MemberName']=$MemberOneName;
            $Where['MemberTypeID']=3;
            $Info=$Model->where($Where)->find();
            if(empty($Info)) $this->error('您所填写的一级代理不存在');
        }
        $MemberPwd=$Post['MemberPwd'];
        $MemberName=$Post['MemberName'];
        $Post['MemberPwd']=md5(config('config.MemberPwdKey').md5($MemberPwd.$MemberName).md5($MemberPwd));
        $Post['GroupID']=2;
        $Post['MemberRecommendID']=empty($Info['MemberID'])?'0':$Info['MemberID'];
        $Model->data($Post)->save();
        $ID=$Model->getLastInsID();
        $Str='';
        if(!empty($MemberOneName) && empty($Info['MemberRecommendPath'])){
            $Str=','.$Info['MemberID'];
        }elseif(!empty($MemberOneName) && !empty($Info['MemberRecommendPath'])){
            $Str=','.$Info['MemberRecommendPath'];
        }
        $Where=array();
        $Where['MemberID']=$ID;
        $Post['MemberRecommendPath']=$ID.$Str;
        $Model->where($Where)->data($Post)->update();
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'已添加成功','LogOperateContent'=>'ID:'.$ID]);
        $this->success($this->MenuName.'添加成功',url('index'));
    }
    //数据修改
    public function edit()
    {
        if($this->request->isPost())
        {
            $Post=input('post.');
            $this->EditSave($Post);
        }else {
            $ID=input('id','','abs');
            $Model=new MemberModel();
            $Info=$Model->where('MemberID',$ID)->find();
            if(!empty($Info['MemberRecommendID'])){
                $MemberName=$Model->where('MemberID',$Info['MemberRecommendID'])->value('MemberName');
                $Info['MemberOneLevelName']=$MemberName;
            }
            $this->assign('Info',$Info);
            $this->assign('GetMemberTypeList',$this->GetAgentTypeList(1));
            $this->assign('MemberPriceType',$this->GetCurrentWholeType(115));//	会员价格
            return $this->fetch();
        }
    }
    //修改保存
    private function EditSave($Post)
    {
        $MemberID=$Post['MemberID'];
        if(!empty($Post['MemberPwd']))
        {
            if($Post['MemberPwd']!=$Post['MemberAffirmPwd'])
            {
                $this->error('您的两次密码输入不一致');
            }
            $MemberPwd=$Post['MemberPwd'];
            $MemberName=$Post['MemberName'];
            $Post['MemberPwd']=md5(config('config.MemberPwdKey').md5($MemberPwd.$MemberName).md5($MemberPwd));
        }else{
            unset($Post['MemberPwd']);
        }
        unset($Post['MemberName']);
        unset($Post['MemberAffirmPwd']);
        $DomainState=empty($Post['DomainState'])?'':$Post['DomainState'];
		$oneDomainState=empty($Post['oneDomainState'])?'':$Post['oneDomainState'];
        unset($Post['DomainState']);
		unset($Post['oneDomainState']);
        $Model=new MemberModel();
        //手机号验证
        //exit();
//        $MemberMobile=$Model->where('MemberID',$MemberID)->value('MemberMobile');
//        if($MemberMobile!=$Post['MemberMobile'])
//        {
//            $State=$Model->where('MemberMobile',$Post['MemberMobile'])->count();
//            if($State!=0) $this->error('您所输入的会员手机号已被注册');
//        }
        //邮箱验证
//        $MemberEmail=$Model->where('MemberID',$MemberID)->value('MemberEmail');
//        if($MemberEmail!=$Post['MemberEmail']) {
//            $State = $Model->where('MemberEmail', $Post['MemberEmail'])->count();
//            if ($State != 0) $this->error('您所输入的会员邮箱已被注册');
//        }
        if($DomainState!='Yes')
        {
            //域名验证
            $Domain=$Model->where('MemberID',$MemberID)->value('Domain');
            if($Domain!=$Post['Domain']){
                $State=$Model->where('Domain',$Post['Domain'])->count();
                if($State!=0) $this->error('此域名已被占用');
            }
        }
		if($oneDomainState!='Yes')
        {
			 //域名验证
            $oneDomain=$Model->where('MemberID',$MemberID)->value('oneDomain');
            if($oneDomain!=$Post['oneDomain']){
                $Stateone=$Model->where('oneDomain',$Post['oneDomain'])->count();
                if($Stateone!=0) $this->error('此一级域名已被占用');
            }
        }
        //图片上传
//        $PicPath=$this->OneUpload('MemberPicPath');
//        if(!empty($PicPath)){
//            $Post['MemberPicPath']=$PicPath;
//            //删除图片
//            $this->DelUpLoad('MemberID',$MemberID,'member','MemberPicPath');
//        }
        $Post['AgentApplyTime']=strtotime($Post['AgentApplyTime']);
        $Model->where('MemberID',$MemberID)->update($Post);
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'修改成功','LogOperateContent'=>'ID:'.$MemberID]);
        $this->success($this->MenuName.'修改成功');
    }
    //删除数据
    public function del()
    {
        $ID=input('param.id','0','abs');
        if(empty($ID)){
            $ID=input('post.Del/a');
        }
        if(empty($ID)){$this->error('请不要发非法操作');}
        //删除图片
        $this->DelUpLoad('MemberID',$ID,'member','MemberPicPath');
        $Where=array();
        $Where['MemberID']=['in',$ID];
        \think\Db::name('member')->where($Where)->delete();
        $IDStr=is_array($ID)?implode(',',$ID):$ID;
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'数据删除','LogOperateContent'=>'ID:'.$IDStr]);
        $this->success($this->MenuName.'删除成功');
    }
    //删除数据
    public function balancedel(){
        $ID=input('param.id','0','abs');
        if(empty($ID)){
            $ID=input('post.Del/a');
        }
        if(empty($ID)){$this->error('请不要发非法操作');}
        $Where=array();
        $Where['BalanceID']=['in',$ID];
        \think\Db::name('balance')->where($Where)->delete();
        $IDStr=is_array($ID)?implode(',',$ID):$ID;
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'充值/消费数据删除','LogOperateContent'=>'ID:'.$IDStr]);
        $this->success($this->MenuName.'充值/消费删除成功');
    }
    //财务报表
    public function finance(){
        $ID=input('id','','abs');
        $UrlParam=input('get.');
        $UrlParam['MemberID']=$ID;
        $StartDate = input('startdate', '');
        $EndDate = input('enddate', '');
        if(!empty($StartDate) || !empty($EndDate)){
            if(empty($StartDate)) $StartDate=date('Y-m-d');
            if(empty($EndDate)) $EndDate=date('Y-m-d');
        }
        if(!empty($StartDate) && !empty($EndDate)){
            $StartDate=strtotime($StartDate);$EndDate=strtotime($EndDate);
            $MinDate=min($StartDate,$EndDate);$MaxDate=max($StartDate,$EndDate);
            $MaxDate+=86399;
            $UrlParam['startdate']=date('Y-m-d',$MinDate);
            $UrlParam['enddate']=date('Y-m-d',$MaxDate);
            $UrlParam['MinDate']=$MinDate;$UrlParam['MaxDate']=$MaxDate;
        }
        $Model=new BalanceModel();
        $List=$Model->GetList($UrlParam,$this->PageCount);
        $this->assign('List',$List);
        $this->assign('UrlParam',$UrlParam);
        return $this->fetch();
    }
    //会员充值
    public function topup(){
        if($this->request->isPost()){
            $Post=input('post.');
            $this->TopUpSave($Post);
        }else{
            $ID=input('id','','abs');
            $Model=new MemberModel();
            $Info=$Model->where('MemberID',$ID)->find();
            $this->assign('Info',$Info);
            return $this->fetch();
        }
    }
    //保存数据
    private function TopUpSave($Post)
    {
        $MemberID=$Post['BalanceMemberID'];
        $Model=new BalanceModel();
        $MemberModel=new \app\admin\model\Member();
        $Info=$MemberModel->where('MemberID',$MemberID)->find();
        if(empty($Info['MemberID'])) $this->error('您所充值的会员不存在');
        $Post['BalanceMemberRecommendID']=$Info['MemberRecommendID'];
        $Post['BalanceMemberRecommendPath']=$Info['MemberRecommendPath'];
        $MemberID=$Info['MemberID'];
        $Sum=0;$Mark='';
        if($Post['BalanceType']==1){
            $Mark='充值';
            $Sum=$Info['MemberAgentBalanceCount']+$Post['BalanceCount'];
        }else if($Post['BalanceType']==2){
            $Mark='扣除';
            if($Info['MemberAgentBalanceCount']>=$Post['BalanceCount']){
                $Sum=$Info['MemberAgentBalanceCount']-$Post['BalanceCount'];
            }else{
                $Post['BalanceCount']=$Info['MemberAgentBalanceCount'];
                $Sum=0;
            }
        }
        //会员账户积分余额变更
        $Data=array();
        $Data['MemberAgentBalanceCount']=$Sum;
        $MemberModel->EditInfo($MemberID,$Data);
        $Post['BalanceMemberID']=$MemberID;
        $Post['BalanceCurrentCount']=$Sum;
        $Post['BalanceState']=1;
        $Post['BalanceNumber']='cz'.order_num();
        $Model->data($Post)->save();
        $IDStr=$Model->getLastInsID();
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.$Mark.'操作成功','LogOperateContent'=>'ID:'.$IDStr]);
        $this->success($this->MenuName.$Mark.'操作成功',url('topup',['id'=>$MemberID]));
    }
    public function userlevel(){
        if($this->request->isPost()){
            $Post=input('post.');
            $Model=new \app\agency\model\Member();
            $Model->where('MemberID',$Post['MemberID'])->update(['MemberPriceType'=>$Post['MemberPriceType']]);
            return json('0');
        }else {
            $MemberID = input('MemberID', '', 'abs');
            $this->assign('GetMemberPriceTypeList', $this->GetMemberPriceTypeList(115));
            $Info = db('member')->where('MemberID', $MemberID)->find();
            $this->assign('Info', $Info);
            $this->assign('MemberID', $MemberID);
            return $this->fetch();
        }
    }
    //获取会员价格类型信息
    protected function GetMemberPriceTypeList($ParentID='0')
    {
        $Where=array();
        $Where['TypePID']=['in',$ParentID];
        $Where['TypeState']='1';
        return Db::name('wholetype')->field('TypeID,TypeName')->where($Where)->order('TypeSort Asc,TypeID Asc')->select();
    }
    //二级代理查看
    public function nextsee(){
        $UrlParam=input();
        $UrlParam['GroupID']=2;
        $Model=new MemberModel();
        $List=$Model->GetAgentNextList($UrlParam,$this->PageCount);
        $this->assign('List',$List);
        $this->assign('UrlParam',$UrlParam);
        return $this->fetch();
    }
	public function dlist(){
        //$UrlParam=input('get.');
		 
       // $UrlParam['RegDomain']!='-1';//-1为主站，其他为域名前缀
        //$UrlParam['GroupID']=2;//1会员2代理商
        $UrlParam['MemberID']=input('param.MemberID'); //不知
	 
         $Model=new MemberModel();
        $List=$Model->GetList($UrlParam,$this->PageCount);
        $this->assign('List',$List);
        $this->assign('UrlParam',$UrlParam);
        $this->assign('GetMemberTypeList',$this->GetMemberTypeList());
        return $this->fetch();
    }
}