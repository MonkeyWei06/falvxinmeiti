<?php
/**
 * Created by PhpStorm.
 * User: Memberistrator
 * Date: 2018/1/4
 * Time: 9:49
 */
namespace app\admin\controller;
use app\admin\model\Wemedia as WemediaModel;
use think\Loader;
use think\Db;
use think\Request;
use app\admin\model\HomePrice;
class Wemedia extends Common
{
    private $PageCount=20;
    private $MenuName='自媒体';//栏目名称
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('MenuName',$this->MenuName);
        $this->assign('MediaWebNameID',$this->GetCurrentWholeType(157));//	平台
        $this->assign('MediaIndustryID',$this->GetCurrentWholeType(160));//行业类型
        $this->assign('MediaCityID',$this->GetCityTypeList('0'));//覆盖区域
		$this->assign('fennumid',FanNum());//粉丝数
        $this->assign('MediaRedID',ReadNum());//阅读数
		//$this->assign('pricenum',PriceNum());//价格
		//$this->assign('auth',AuthNum());//帐号认证
    }
    public function index(){
        $UrlParam=input();
        $Model=new WemediaModel();
        $List=$Model->GetList($UrlParam,$this->PageCount);
        $_SESSION['UrlParam']=$UrlParam;
        $this->assign('List',$List);
		foreach ($List as $key=>$val) {
			if($val['MediaMemberID'] >0){
					$List[$key]['membername']=Db::name('member')->where('MemberID',$val['MediaMemberID'])->value('MemberName');
				}
		}
        $this->assign('UrlParam',$UrlParam);
        return $this->fetch();
    }
    public function add(){
        if($this->request->isPost())
        {
            $Post=input('post.');
            $this->AddSave($Post);
        }else{
            return $this->fetch();
        }
    }
    public function edit()
    {
        if($this->request->isPost())
        {
            $Post=input('post.');
            $this->EditSave($Post);
        }else{
            $ID=input('id','','abs');
            $Model=new WemediaModel();
            $Info=$Model->where('MediaID',$ID)->find();
            $Info['MemberName']=db('Member')->where('MemberID',$Info['MediaMemberID'])->value('MemberName');
            $this->assign('Info',$Info);
            return $this->fetch();
        }
    }
    public function EditSave($Post){
        $MediaID=$Post['MediaID'];
        $Where=array();
        $Where['MediaID']=$MediaID;
        $Model=new WemediaModel();
        //图片上传
        $PicPath=$this->OneUpload('MediaWebLogo');
        if(!empty($PicPath)) $Post['MediaWebLogo']=$PicPath;
        $Model->save($Post,$Where);
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'已修改成功','LogOperateContent'=>'ID:'.$MediaID]);
        //$this->success('此'.$this->MenuName.'已修改成功');
        $this->alert('此'.$this->MenuName.'已修改成功','back');
    }
    //删除数据
    public function del()
    {
        if($this->request->isPost()){
            $this->delmore();
        }elseif($this->request->isGet()) {
            $ID = input('param.id');
            if (!empty($ID)) {
                $Model = new WemediaModel();
                $Model->where('MediaID', $ID)->delete();
            }
            AdminLogDetail(['LogOperateTitle' => $this->MenuName . '记录删除成功', 'LogOperateContent' => 'ID:' . $ID]);
            //$this->success('此记录已删除成功');
            $this->alert('此记录已删除成功','back');
        }
    }
    //批量删除记录
    private function delmore()
    {
        $DelID=input('post.Del/a');
        //dump($DelID);
        if(!empty($DelID))
        {
            $DelIDStr=implode(',',$DelID);
            $Model=new WemediaModel();
            $Model->where('MediaID','in',$DelIDStr)->delete();
            AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'批量删除成功','LogOperateContent'=>'ID:'.$DelIDStr]);
        }
        //$this->success('此记录批量删除成功');
        $this->alert('此记录批量删除成功','back');
    }
    //保存价格
    public function batchedit(){
        if($this->request->isPost())
        {
            $Post=input('post.');
            $this->SaveBatchEdit($Post);
        }else {
            $List=db('home_price')->where('member_id','-1')->order('price_id asc')->select();
            $this->assign('List',$List);
            return $this->fetch();
        }
    }
    private function SaveBatchEdit($Post){
        if(empty($Post)) $this->error('您提交的数据不能为空');
        //dump($Post);
        $DelID=array();
        $BeginPrice=$Post['BeginPrice'];
        $EndPrice=$Post['EndPrice'];
        $MediaMemberPrice1=$Post['MediaMemberPrice1'];//铜牌
        $MediaMemberPrice2=$Post['MediaMemberPrice2'];//银牌
        $MediaMemberPrice3=$Post['MediaMemberPrice3'];//金牌
        $MediaMemberPrice4=$Post['MediaMemberPrice4'];//钻石
        db('home_price')->where('member_id','-1')->delete();
        foreach ($BeginPrice as $key=>$val){
            $TempBeginPrice=abs($val);
            $TempEndPrice=abs($EndPrice[$key]);
            $TempMediaMemberPrice1=intval($MediaMemberPrice1[$key]);
            $TempMediaMemberPrice2=intval($MediaMemberPrice2[$key]);
            $TempMediaMemberPrice3=intval($MediaMemberPrice3[$key]);
            $TempMediaMemberPrice4=intval($MediaMemberPrice4[$key]);
            $Arr=array();
            $Arr['member_id']='-1';
            $Arr['price_start']=$TempBeginPrice;
            $Arr['price_end']=$TempEndPrice;
            $Arr['price_one']=$TempMediaMemberPrice1;
            $Arr['price_two']=$TempMediaMemberPrice2;
            $Arr['price_three']=$TempMediaMemberPrice3;
            $Arr['price_four']=$TempMediaMemberPrice4;
            db('home_price')->insert($Arr);
        }
        $DelIDStr = empty($DelID) ? '' : implode(',',$DelID);
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'价格已批量更新','LogOperateContent'=>'ID:'.$DelIDStr]);
        $this->alert($this->MenuName.'价格已批量保存','jump',url('batchedit'));
    }
    //更新媒体
    public function updateprice(){
        if(!$this->request->isPost()) $this->error('提交错误');
        $Post=input('post.');
        $this->SaveUpdatePrice($Post);
    }
    private function SaveUpdatePrice($Post){
        if(empty($Post)) $this->error('您提交的数据不能为空');
        //dump($Post);
        $DelID=array();
        $BeginPrice=$Post['BeginPrice'];
        $EndPrice=$Post['EndPrice'];
        $MediaMemberPrice1=$Post['MediaMemberPrice1'];//铜牌
        $MediaMemberPrice2=$Post['MediaMemberPrice2'];//银牌
        $MediaMemberPrice3=$Post['MediaMemberPrice3'];//金牌
        $MediaMemberPrice4=$Post['MediaMemberPrice4'];//钻石
        $Model=new WemediaModel();
        $List=$Model->field('MediaID,MediaWebPrice')->where('MediaState','1')->select();
        foreach ($List as $key=>$val){
            $this->UpdatePriceFiltration($val,$BeginPrice,$EndPrice,$MediaMemberPrice1,$MediaMemberPrice2,$MediaMemberPrice3,$MediaMemberPrice4);
            $DelID[]=$val['MediaID'];
        }
        $DelIDStr = empty($DelID) ? '' : implode(',',$DelID);
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'价格已批量更新','LogOperateContent'=>'ID:'.$DelIDStr]);
        $this->alert($this->MenuName.'价格已批量更新','jump',url('batchedit'));
    }
    private function UpdatePriceFiltration($Data,$BeginPrice,$EndPrice,$MediaMemberPrice1,$MediaMemberPrice2,$MediaMemberPrice3,$MediaMemberPrice4){
        if(!is_array($BeginPrice)) return false;
        if(empty($Data['MediaWebPrice']) || $Data['MediaWebPrice']<0) return false;
        $Model=new WemediaModel();
        $ID=$Data['MediaID'];
        $MediaWebPrice=$Data['MediaWebPrice'];
        foreach ($BeginPrice as $key=>$val){
            $TempBeginPrice=abs($val);
            $TempEndPrice=abs($EndPrice[$key]);
            $TempMediaMemberPrice1=intval($MediaMemberPrice1[$key]);
            $TempMediaMemberPrice2=intval($MediaMemberPrice2[$key]);
            $TempMediaMemberPrice3=intval($MediaMemberPrice3[$key]);
            $TempMediaMemberPrice4=intval($MediaMemberPrice4[$key]);
            if($MediaWebPrice>=$TempBeginPrice && $MediaWebPrice<=$TempEndPrice){
                $Arr=array();
                $Arr['MediaMemberPrice1']=$TempMediaMemberPrice1+$MediaWebPrice;
                $Arr['MediaMemberPrice2']=$TempMediaMemberPrice2+$MediaWebPrice;
                $Arr['MediaMemberPrice3']=$TempMediaMemberPrice3+$MediaWebPrice;
                $Arr['MediaMemberPrice4']=$TempMediaMemberPrice4+$MediaWebPrice;
                $Model->save($Arr,['MediaID'=>$ID]);
                break;
            }
        }
    }
    public function whole($Val)
    {
        return Db::name('wholetype')->where('TypeName',trim($Val))->value('TypeID');
    }
    public function GetListInfo($UrlParam)
    {
        $Where=array();
        if(!empty($UrlParam['MediaWebNameID'])){
            $Where['MediaWebNameID']=$UrlParam['MediaWebNameID'];
        }
        if(!empty($UrlParam['MediaIndustryID'])){
            $Where['MediaIndustryID']=$UrlParam['MediaIndustryID'];
        }
        if(!empty($UrlParam['MediaCityID'])){
            $Where['MediaCityID']=$UrlParam['MediaCityID'];
        }
        if(!empty($UrlParam['keyword'])){
            $Where['MediaTitle']=array('like','%'.$UrlParam['keyword'].'%');
        }
        $Info=Db::name('wemedia')->where($Where)->order('MediaID desc')->select();
        return $Info;
    }
}