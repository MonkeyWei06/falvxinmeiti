<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/7/24
 * Time: 11:23
 */
namespace app\admin\controller;
use think\Db;
use app\admin\model\About as AboutModel;
class About extends Common
{
    private $MenuName = '关于我们';
    private $PageCount=15;
    //公共的方法调用
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('FileSeat','/'.config('config.FileSeat').'/');
        $this->assign('MenuName', $this->MenuName);
    }
    //帮助中心列表
    public function index()
    {
        $UrlParam=input('get.');
        $this->assign('UrlParam',$UrlParam);
        $Keyword=input('keyword','');
        $Model=new AboutModel();
        $List = $Model->GetList($this->PageCount,$Keyword);
        $this->assign('List', $List);
        return $this->fetch();
    }
    //帮助中心添加
    public function add()
    {
        if($this->request->isPost())
        {
            $Post=input('post.');
            $this->AddSave($Post);
        }else{
            //调取商品级联菜单
            $AboutTypeListOne=$this->CallAboutMenu('0');
            //dump($AboutTypeListOne);
            $this->assign('AboutTypeListOne',$AboutTypeListOne);
            return $this->fetch();
        }
    }
    //保存添加数据
    private function AddSave($Post)
    {
        $Model=new AboutModel();
        //图片上传
        $PicPath=$this->OneUpload('AboutPicPath');
        if(!empty($PicPath)){
            $Post['AboutPicPath']=$PicPath;
        }
        $Model->save($Post);
        $InsertID=$Model->getLastInsID();
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'已添加成功','LogOperateContent'=>'ID:'.$InsertID]);
        //$this->success('此'.$this->MenuName.'已添加成功');
        $this->alert('此'.$this->MenuName.'已添加成功','back');
        exit;
    }
    //数据修改
    public function edit()
    {
        if($this->request->isPost())
        {
            $Post=input('post.');
            $this->EditSave($Post);
        }else{
            $ID=input('param.id','','abs');
            $Model=new AboutModel();
            $Info=$Model->get($ID);
            $this->assign('Info',$Info);
            //商品分类获取
            $AboutTypePathArr=['0','0','0'];
            if(!empty($Info['AboutTypePath']))
            {
                $AboutTypePathArr=explode(',',$Info['AboutTypePath']);
            }
            $this->assign('AboutTypePathArr',$AboutTypePathArr);
            //调取商品级联菜单  一级分类
            $AboutTypeListOne=$this->CallAboutMenu('0');
            //dump($AboutTypeListOne);
            $this->assign('AboutTypeListOne',$AboutTypeListOne);
            //调取商品级联菜单  二级分类
            $AboutTypeListTwo=[];
            if(!empty($AboutTypePathArr[0])){
                $AboutTypeListTwo=$this->CallAboutMenu($AboutTypePathArr[0]);
            }
            //dump($AboutTypeListOne);
            $this->assign('AboutTypeListTwo',$AboutTypeListTwo);
            //调取商品级联菜单  三级分类
            $AboutTypeListThree=[];
            if(!empty($AboutTypePathArr[1])) {
                $AboutTypeListThree = $this->CallAboutMenu($AboutTypePathArr[1]);
            }
            //dump($AboutTypeListOne);
            $this->assign('AboutTypeListThree',$AboutTypeListThree);
            return $this->fetch();
        }
    }
    //保存修改数据
    private function EditSave($Post)
    {
        $AboutID=$Post['AboutID'];
        //图片上传
        $PicPath=$this->OneUpload('AboutPicPath');
        if(!empty($PicPath)){
            $this->DelOneOldPic($AboutID,'about','AboutID','AboutPicPath');//先删除
            $Post['AboutPicPath']=$PicPath;
        }
        $Where=[];
        $Where['AboutID']=$AboutID;
        $Model=new AboutModel();
        $Model->save($Post,$Where);
        AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'已修改成功','LogOperateContent'=>'ID:'.$AboutID]);
        //$this->success('此'.$this->MenuName.'已修改成功');
        $this->alert('此'.$this->MenuName.'已修改成功','back');
        exit;
    }
    //删除数据
    public function del()
    {
        if($this->request->isPost())
        {
            $this->delmore();
        }elseif($this->request->isGet()) {
            $ID = input('param.id');
            if (!empty($ID)) {
                $this->DelOneOldPic($ID, 'about', 'AboutID', 'AboutPicPath');
                $Model = new AboutModel();
                $Model->where('AboutID', $ID)->delete();
            }
            AdminLogDetail(['LogOperateTitle' => $this->MenuName . '记录删除成功', 'LogOperateContent' => 'ID:' . $ID]);
            //$this->success('此记录已删除成功');
            $this->alert('此记录已删除成功','back');
            exit;
        }
    }
    //批量删除记录
    private function delmore()
    {
        $DelID=input('post.Del/a');
        //dump($DelID);
        if(!empty($DelID))
        {
            $DelIDStr=implode(',',$DelID);
            $this->DelOneOldPic($DelIDStr,'about','AboutID','AboutPicPath');
            $Model=new AboutModel();
            $Model->where('AboutID','in',$DelIDStr)->delete();
            AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'批量删除成功','LogOperateContent'=>'ID:'.$DelIDStr]);
        }
        //$this->success('此记录批量删除成功');
        $this->alert('此记录批量删除成功','back');
        exit;
    }
    //批量排序
    public function sort()
    {
        $SortArr=input('post.Sort/a');
        //dump($SortArr);
        if(!empty($SortArr))
        {
            $TempArr=[];$SortID=[];$SortIDStr='';
            foreach ($SortArr as $key=>$val)
            {
                $SortID[]=$key;
                $TempArr[]=['AboutID'=>$key,'AboutSort'=>$val];
            }
            if(!empty($SortID)){$SortIDStr=implode(',',$SortID);}
            $Model=new AboutModel();
            $Model->saveAll($TempArr);
            AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'批量排序成功','LogOperateContent'=>'ID:'.$SortIDStr]);
        }
        //$this->success('排序更新成功');
        $this->alert('排序更新成功','back');
        exit;
    }
    //调用商品分类菜单
    private function CallAboutMenu($PID='0')
    {
        $List=Db::name('abouttype')->field('TypeID,TypePID,TypePath,TypeName')->where('TypePID',$PID)->order('TypeSort Asc,TypeID Asc')->select();
        return $List;
    }
    //Ajax分类返回调用
    public function GetTypeList()
    {
        $Value=input('post.Value','');
        if(!empty($Value))
        {
            $List=$this->CallAboutMenu($Value);
            return $this->result($List,'0');
        }else{
            return $this->result('','1');
        }
    }
}