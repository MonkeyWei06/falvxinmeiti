<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2017/7/10
 * Time: 11:29
 */
namespace app\admin\controller;
use app\admin\model\Role;
use app\admin\model\AuthGroupAccess;
use think\Request;
use think\Config;
class Admin extends Common
{
    private $MenuName='管理员';
    //公共的方法调用
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->assign('MenuName',$this->MenuName);
    }
    //管理员列表
    public function index()
    {
        $UrlParam=input('get.');
        $this->assign('UrlParam',$UrlParam);
        $Keyword=input('keyword','');
        $Model=new \app\admin\model\Admin();
        $List=$Model->GetList($Keyword);
        $this->assign('List',$List);
        return $this->fetch();
    }
    //添加管理员
    public function add()
    {
        $Request=Request::instance();
        if($Request->isPost())
        {
            $AdminName=input('post.AdminName');
            $AdminPwd=input('post.AdminPwd');
            $AdminAffirmPwd=input('post.AdminAffirmPwd');
            $Model=new \app\admin\model\Admin();
            $State=$Model->AdminInfoCheck($AdminName);
            //dump($State);
            if($State!=0)
            {
               // $this->error('您的用户名已被占用');
                $this->alert('您的手机号码已被占用','back');
                exit;
            }
            if($AdminPwd!=$AdminAffirmPwd)
            {
                //$this->error('您的确认密码输入有误');
                $this->alert('您的确认密码输入有误','back');
                exit;
            }
            $AdminPwd=md5(config('AdminKey').$AdminPwd.config('AdminPwd'));
            $_POST['AdminPwd']=$AdminPwd;
            $AdminRoleState=input('post.AdminRoleState/a');
            $AllRoleState='';
            if(!empty($AdminRoleState) && in_array('All',$AdminRoleState))
            {
                $AllRoleState='Yes';
            }
            if($AllRoleState=='Yes')
            {
                $_POST['AdminRoleState']='All';
            }else{
                $_POST['AdminRoleState']='';
            }
            unset($_POST['AdminAffirmPwd']);
            $Model->data($_POST)->save();
            $InsertID=$Model->AdminID;
            if(!empty($AdminRoleState) && empty($AllRoleState))
            {
                $Data=[];
                foreach ($AdminRoleState as $key=>$val)
                {
                    $Data[]=['uid'=>$InsertID,'group_id'=>$val];
                }
                $AuthGroupAccessMode=new \app\admin\model\AuthGroupAccess();
                $AuthGroupAccessMode->saveAll($Data);
            }
            //dump($AdminRoleState);
            //dump(input('post.'));
            AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'此管理员已添加成功','LogOperateContent'=>'ID:'.$InsertID]);
            //$this->success('此管理员已添加成功');
            $this->alert('此管理员已添加成功','back');
            exit;
        }else{
            $this->assign('RoleList',$this->RoleList());
            return $this->fetch();
        }
    }
    //修改管理员
    public function edit()
    {
        $ID=input('param.id','0');
        $Model=new \app\admin\model\Admin();
        if($this->request->isPost())
        {
            $ID=input('post.AdminID','0');
            $AdminPwd=input('post.AdminPwd');
            $AdminAffirmPwd=input('post.AdminAffirmPwd');
            if(!empty($AdminPwd))
            {
                if($AdminPwd!=$AdminAffirmPwd){
                    //$this->error('您所输入的确认密码不一致');
                    $this->alert('您所输入的确认密码不一致','back');
                    exit;
                }
                $AdminPwd=md5(config('AdminKey').$AdminPwd.config('AdminPwd'));
                $_POST['AdminPwd']=$AdminPwd;
            }else{
                unset($_POST['AdminPwd']);
            }
            $AdminRoleState=input('post.AdminRoleState/a');
            $AllRoleState='';
            if(!empty($AdminRoleState) && in_array('All',$AdminRoleState))
            {
                $AllRoleState='Yes';
            }
            if($AllRoleState=='Yes')
            {
                $_POST['AdminRoleState']='All';
            }else{
                $_POST['AdminRoleState']='';
            }
            unset($_POST['AdminAffirmPwd']);
            $Model->where('AdminID',$ID)->update($_POST);
            $AuthGroupAccessModel=new AuthGroupAccess();
            $AuthGroupAccessModel->DeleteList($ID);
            if(!empty($AdminRoleState) && empty($AllRoleState))
            {
                $Data=[];
                foreach ($AdminRoleState as $key=>$val)
                {
                    $Data[]=['uid'=>$ID,'group_id'=>$val];
                }
                $AuthGroupAccessModel->saveAll($Data);
            }
            AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'此管理员账户信息修改成功','LogOperateContent'=>'ID:'.$ID]);
            //$this->success('此管理员账户信息修改成功');
            $this->alert('此管理员账户信息修改成功','back');
            exit;
        }else{
            $Info=$Model->GetInfo($ID);
            $AuthGroupAccessModel=new AuthGroupAccess();
            $AuthGroupAccessList=$AuthGroupAccessModel->GetList($ID);
            $TempList=array();
            if(!empty($AuthGroupAccessList))
            {
                foreach ($AuthGroupAccessList as $key=>$val)
                {
                    $TempList[]=$val['group_id'];
                }
            }
            //dump($TempList);
            //dump($AuthGroupAccessList);
            $this->assign('RoleList',$this->RoleList());
            $this->assign('Info',$Info);
            $this->assign('TempList',$TempList);
            return $this->fetch();
        }
    }
    //获取管理员的角色列表
    private function RoleList()
    {
        $Model=new Role();
        $Where=[];
        $Where['status']='1';
        return $Model->GetList('',$Where);
    }
    //删除数据
    public function del()
    {
        if($this->request->isPost())
        {
            $this->delmore();
        }elseif($this->request->isGet()) {
            $ID = input('param.id');
            if (!empty($ID)) {
                $Model = new \app\admin\model\Admin();
                $Model->where('AdminID', $ID)->delete();
            }
            AdminLogDetail(['LogOperateTitle' => $this->MenuName . '记录删除成功', 'LogOperateContent' => 'ID:' . $ID]);
            //$this->success('此记录已删除成功');
            $this->alert('此记录已删除成功','back');
            exit;
        }
    }
    //批量删除记录
    private function delmore()
    {
        $DelID=input('post.Del/a');
        //dump($DelID);
        if(!empty($DelID))
        {
            $DelIDStr=implode(',',$DelID);
            $Model=new \app\admin\model\Admin();
            $Model->where('AdminID','in',$DelIDStr)->delete();
            AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'批量删除成功','LogOperateContent'=>'ID:'.$DelIDStr]);
        }
        //$this->success('此记录批量删除成功');
        $this->alert('此记录批量删除成功','back');
        exit;
    }
    //批量排序
    public function sort()
    {
        $SortArr=input('post.Sort/a');
        //dump($SortArr);
        if(!empty($SortArr))
        {
            $TempArr=[];$SortID=[];$SortIDStr='';
            foreach ($SortArr as $key=>$val)
            {
                $SortID[]=$key;
                $TempArr[]=['AdminID'=>$key,'AdminSort'=>$val];
            }
            if(!empty($SortID)){$SortIDStr=implode(',',$SortID);}
            $Model=new \app\admin\model\Admin();
            $Model->saveAll($TempArr);
            AdminLogDetail(['LogOperateTitle'=>$this->MenuName.'批量排序成功','LogOperateContent'=>'ID:'.$SortIDStr]);
        }
        //$this->success('排序更新成功');
        $this->alert('排序更新成功','back');
        exit;
    }
    //Ajax管理员信息调用
    public function AdminInfoCheck()
    {
        $AdminName=input('post.AdminName');
        $Model=new \app\admin\model\Admin();
        $State=$Model->AdminInfoCheck($AdminName);
        //dump($State);
        if($State==0)
        {
            return $this->result('','0','您的手机号可以使用');
        }else{
            return $this->result('','1','您的手机号已被占用');
        }
    }
}